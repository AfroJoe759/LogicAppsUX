<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="95" failures="0" errors="0" time="29.261">
  <testsuite name="ui/recommendation3/_badge" errors="0" failures="0" skipped="0" timestamp="2021-10-07T06:53:35" time="8.086" tests="4">
    <testcase classname="ui/recommendation3/_badge should not render when not visible" name="ui/recommendation3/_badge should not render when not visible" time="0.005">
    </testcase>
    <testcase classname="ui/recommendation3/_badge should render when visible" name="ui/recommendation3/_badge should render when visible" time="0.002">
    </testcase>
    <testcase classname="ui/recommendation3/_badge should render with a CSS class when specified" name="ui/recommendation3/_badge should render with a CSS class when specified" time="0.001">
    </testcase>
    <testcase classname="ui/recommendation3/_badge should render the correct tag when specified" name="ui/recommendation3/_badge should render the correct tag when specified" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="ui/recommendation3/_documentationitem" errors="0" failures="0" skipped="0" timestamp="2021-10-07T06:53:35" time="8.324" tests="2">
    <testcase classname="ui/recommendation3/_documentationitem should render" name="ui/recommendation3/_documentationitem should render" time="0.006">
    </testcase>
    <testcase classname="ui/recommendation3/_documentationitem should call openWindow callback if set" name="ui/recommendation3/_documentationitem should call openWindow callback if set" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="ui/label" errors="0" failures="0" skipped="0" timestamp="2021-10-07T06:53:35" time="8.462" tests="11">
    <testcase classname="ui/label should construct" name="ui/label should construct" time="0.005">
    </testcase>
    <testcase classname="ui/label className should set the &quot;class&quot; attribute" name="ui/label className should set the &quot;class&quot; attribute" time="0.001">
    </testcase>
    <testcase classname="ui/label className should set the &quot;class&quot; attribute to &quot;msla-label&quot; when className is not set" name="ui/label className should set the &quot;class&quot; attribute to &quot;msla-label&quot; when className is not set" time="0.001">
    </testcase>
    <testcase classname="ui/label id should set the &quot;id&quot; attribute" name="ui/label id should set the &quot;id&quot; attribute" time="0.001">
    </testcase>
    <testcase classname="ui/label htmlFor should set the &quot;for&quot; attribute" name="ui/label htmlFor should set the &quot;for&quot; attribute" time="0.001">
    </testcase>
    <testcase classname="ui/label htmlFor should not set the &quot;for&quot; attribute if htmlFor is not passed" name="ui/label htmlFor should not set the &quot;for&quot; attribute if htmlFor is not passed" time="0.001">
    </testcase>
    <testcase classname="ui/label isRequiredField should render the required parameter marker if set" name="ui/label isRequiredField should render the required parameter marker if set" time="0.001">
    </testcase>
    <testcase classname="ui/label isRequiredField should not render the required parameter marker if not set" name="ui/label isRequiredField should not render the required parameter marker if not set" time="0">
    </testcase>
    <testcase classname="ui/label text should render text" name="ui/label text should render text" time="0">
    </testcase>
    <testcase classname="ui/label tooltip should set the &quot;title&quot; attribute if tooltip is set" name="ui/label tooltip should set the &quot;title&quot; attribute if tooltip is set" time="0.001">
    </testcase>
    <testcase classname="ui/label tooltip should set the &quot;title&quot; attribute to the text content if tooltip is not set" name="ui/label tooltip should set the &quot;title&quot; attribute to the text content if tooltip is not set" time="0">
    </testcase>
  </testsuite>
  <testsuite name="ui/utils/keyboardUtils" errors="0" failures="0" skipped="0" timestamp="2021-10-07T06:53:35" time="12.473" tests="3">
    <testcase classname="ui/utils/keyboardUtils isEnterKey should return true if the Enter key is pressed by itself" name="ui/utils/keyboardUtils isEnterKey should return true if the Enter key is pressed by itself" time="0.003">
    </testcase>
    <testcase classname="ui/utils/keyboardUtils isSpaceKey should return true if the spacebar is pressed by itself" name="ui/utils/keyboardUtils isSpaceKey should return true if the spacebar is pressed by itself" time="0.001">
    </testcase>
    <testcase classname="ui/utils/keyboardUtils isEscapeKey should return true if the escape key is pressed by itself" name="ui/utils/keyboardUtils isEscapeKey should return true if the escape key is pressed by itself" time="0">
    </testcase>
  </testsuite>
  <testsuite name="ui/announcedmatches" errors="0" failures="0" skipped="0" timestamp="2021-10-07T06:53:35" time="13.582" tests="5">
    <testcase classname="ui/announcedmatches should not render when not visible" name="ui/announcedmatches should not render when not visible" time="0.006">
    </testcase>
    <testcase classname="ui/announcedmatches should render when visible" name="ui/announcedmatches should render when visible" time="0.003">
    </testcase>
    <testcase classname="ui/announcedmatches should render a loading message when loading" name="ui/announcedmatches should render a loading message when loading" time="0.001">
    </testcase>
    <testcase classname="ui/announcedmatches should render with singular text when count is 1" name="ui/announcedmatches should render with singular text when count is 1" time="0.001">
    </testcase>
    <testcase classname="ui/announcedmatches should render with plural text when count is greater than 1" name="ui/announcedmatches should render with plural text when count is greater than 1" time="0">
    </testcase>
  </testsuite>
  <testsuite name="ui/title" errors="0" failures="0" skipped="0" timestamp="2021-10-07T06:53:44" time="7.125" tests="16">
    <testcase classname="ui/title should render component correctly when not in editing mode." name="ui/title should render component correctly when not in editing mode." time="0.004">
    </testcase>
    <testcase classname="ui/title should render component correctly when in editing mode." name="ui/title should render component correctly when in editing mode." time="0.001">
    </testcase>
    <testcase classname="ui/title should select text when focusing on input in editing mode." name="ui/title should select text when focusing on input in editing mode." time="0.068">
    </testcase>
    <testcase classname="ui/title text When not editing should render empty when text props is not set." name="ui/title text When not editing should render empty when text props is not set." time="0.001">
    </testcase>
    <testcase classname="ui/title text When not editing should render the text content correctly when text props is set." name="ui/title text When not editing should render the text content correctly when text props is set." time="0">
    </testcase>
    <testcase classname="ui/title text When editing should render empty when text props is not set." name="ui/title text When editing should render empty when text props is not set." time="0.001">
    </testcase>
    <testcase classname="ui/title text When editing should render the text content correctly when text props is set." name="ui/title text When editing should render the text content correctly when text props is set." time="0">
    </testcase>
    <testcase classname="ui/title text When editing should have aria label correctly set." name="ui/title text When editing should have aria label correctly set." time="0">
    </testcase>
    <testcase classname="ui/title tag should render empty when tag props is not set." name="ui/title tag should render empty when tag props is not set." time="0.001">
    </testcase>
    <testcase classname="ui/title tag should render the tag content correctly when tag props is set." name="ui/title tag should render the tag content correctly when tag props is set." time="0">
    </testcase>
    <testcase classname="ui/title tag should render the text content without tag when editing." name="ui/title tag should render the text content without tag when editing." time="0.001">
    </testcase>
    <testcase classname="ui/title onCommit should call onCommit when blur on input." name="ui/title onCommit should call onCommit when blur on input." time="0.016">
    </testcase>
    <testcase classname="ui/title onCommit should call onCommit when ENTER is pressed." name="ui/title onCommit should call onCommit when ENTER is pressed." time="0.008">
    </testcase>
    <testcase classname="ui/title onCommit should not call onCommit when input text change." name="ui/title onCommit should not call onCommit when input text change." time="0.004">
    </testcase>
    <testcase classname="ui/title onDiscard should call onDiscard when ESCAPE is pressed." name="ui/title onDiscard should call onDiscard when ESCAPE is pressed." time="0.004">
    </testcase>
    <testcase classname="ui/title click should call onClick when click title." name="ui/title click should call onClick when click title." time="0.003">
    </testcase>
  </testsuite>
  <testsuite name="ui/toggle" errors="0" failures="0" skipped="0" timestamp="2021-10-07T06:53:35" time="16.584" tests="9">
    <testcase classname="ui/toggle should render a custom button CSS class" name="ui/toggle should render a custom button CSS class" time="0.004">
    </testcase>
    <testcase classname="ui/toggle should render custom icon styles" name="ui/toggle should render custom icon styles" time="0.002">
    </testcase>
    <testcase classname="ui/toggle should fire a click event when clicked" name="ui/toggle should fire a click event when clicked" time="0.001">
    </testcase>
    <testcase classname="ui/toggle Collapsed should render as collapsed" name="ui/toggle Collapsed should render as collapsed" time="0.002">
    </testcase>
    <testcase classname="ui/toggle Collapsed should render custom expand icon" name="ui/toggle Collapsed should render custom expand icon" time="0.001">
    </testcase>
    <testcase classname="ui/toggle Collapsed should render custom expand text" name="ui/toggle Collapsed should render custom expand text" time="0.001">
    </testcase>
    <testcase classname="ui/toggle Expanded should render as expanded" name="ui/toggle Expanded should render as expanded" time="0.001">
    </testcase>
    <testcase classname="ui/toggle Expanded should render custom collapse icon" name="ui/toggle Expanded should render custom collapse icon" time="0.001">
    </testcase>
    <testcase classname="ui/toggle Expanded should render custom collapse text" name="ui/toggle Expanded should render custom collapse text" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="ui/infocontrol/_infocontrol" errors="0" failures="0" skipped="0" timestamp="2021-10-07T06:53:44" time="7.647" tests="3">
    <testcase classname="ui/infocontrol/_infocontrol should construct the info control correctly" name="ui/infocontrol/_infocontrol should construct the info control correctly" time="0.007">
    </testcase>
    <testcase classname="ui/infocontrol/_infocontrol should render info control with dismiss button when dismissible as true" name="ui/infocontrol/_infocontrol should render info control with dismiss button when dismissible as true" time="0.002">
    </testcase>
    <testcase classname="ui/infocontrol/_infocontrol should render info control without dismiss icon when dismissible as false or not specified" name="ui/infocontrol/_infocontrol should render info control without dismiss icon when dismissible as false or not specified" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="ui/copyinputcontrol" errors="0" failures="0" skipped="0" timestamp="2021-10-07T06:53:35" time="16.765" tests="9">
    <testcase classname="ui/copyinputcontrol should construct the copyinputcontrol correctly" name="ui/copyinputcontrol should construct the copyinputcontrol correctly" time="0.007">
    </testcase>
    <testcase classname="ui/copyinputcontrol should render button image correctly" name="ui/copyinputcontrol should render button image correctly" time="0.002">
    </testcase>
    <testcase classname="ui/copyinputcontrol should display text correctly" name="ui/copyinputcontrol should display text correctly" time="0.001">
    </testcase>
    <testcase classname="ui/copyinputcontrol should display placeholder text correctly when text value is not present" name="ui/copyinputcontrol should display placeholder text correctly when text value is not present" time="0.001">
    </testcase>
    <testcase classname="ui/copyinputcontrol textbox should be readOnly" name="ui/copyinputcontrol textbox should be readOnly" time="0.001">
    </testcase>
    <testcase classname="ui/copyinputcontrol onClick should call onClick handler when Copy command is supported by browser" name="ui/copyinputcontrol onClick should call onClick handler when Copy command is supported by browser" time="0.002">
    </testcase>
    <testcase classname="ui/copyinputcontrol onClick should not call onClick handler when Copy command is not supported by browser" name="ui/copyinputcontrol onClick should not call onClick handler when Copy command is not supported by browser" time="0.001">
    </testcase>
    <testcase classname="ui/copyinputcontrol onClick should not call onClick handler when queryCommandSupported Fails or a browser" name="ui/copyinputcontrol onClick should not call onClick handler when queryCommandSupported Fails or a browser" time="0.001">
    </testcase>
    <testcase classname="ui/copyinputcontrol ARIA should set the aria-labelledby attribute" name="ui/copyinputcontrol ARIA should set the aria-labelledby attribute" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="ui/recommendation3/_categorypivot" errors="0" failures="0" skipped="0" timestamp="2021-10-07T06:53:48" time="4.44" tests="2">
    <testcase classname="ui/recommendation3/_categorypivot should render" name="ui/recommendation3/_categorypivot should render" time="0.008">
    </testcase>
    <testcase classname="ui/recommendation3/_categorypivot should not render when not visible" name="ui/recommendation3/_categorypivot should not render when not visible" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="ui/pager/_Pager" errors="0" failures="0" skipped="0" timestamp="2021-10-07T06:53:35" time="17.155" tests="3">
    <testcase classname="ui/pager/_Pager should render" name="ui/pager/_Pager should render" time="0.013">
    </testcase>
    <testcase classname="ui/pager/_Pager should render with read-only pager input" name="ui/pager/_Pager should render with read-only pager input" time="0.002">
    </testcase>
    <testcase classname="ui/pager/_Pager should render with failed iteration buttons" name="ui/pager/_Pager should render with failed iteration buttons" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="ui/identitydropdown" errors="0" failures="0" skipped="0" timestamp="2021-10-07T06:53:35" time="17.406" tests="1">
    <testcase classname="ui/identitydropdown should render" name="ui/identitydropdown should render" time="0.021">
    </testcase>
  </testsuite>
  <testsuite name="ui/dialogs/_confirm" errors="0" failures="0" skipped="0" timestamp="2021-10-07T06:53:35" time="17.41" tests="1">
    <testcase classname="ui/dialogs/_confirm should render" name="ui/dialogs/_confirm should render" time="0.007">
    </testcase>
  </testsuite>
  <testsuite name="ui/dialogs/_alert" errors="0" failures="0" skipped="0" timestamp="2021-10-07T06:53:35" time="17.412" tests="1">
    <testcase classname="ui/dialogs/_alert should render" name="ui/dialogs/_alert should render" time="0.009">
    </testcase>
  </testsuite>
  <testsuite name="ui/recommendation3/_expandconnectorsbutton" errors="0" failures="0" skipped="0" timestamp="2021-10-07T06:53:52" time="1.596" tests="2">
    <testcase classname="ui/recommendation3/_expandconnectorsbutton should render when showing both connectors and operations" name="ui/recommendation3/_expandconnectorsbutton should render when showing both connectors and operations" time="0.002">
    </testcase>
    <testcase classname="ui/recommendation3/_expandconnectorsbutton should not render when not visible" name="ui/recommendation3/_expandconnectorsbutton should not render when not visible" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="ui/recommendation3/_uservoice" errors="0" failures="0" skipped="0" timestamp="2021-10-07T06:53:52" time="1.937" tests="3">
    <testcase classname="ui/recommendation3/_uservoice should render" name="ui/recommendation3/_uservoice should render" time="0.001">
    </testcase>
    <testcase classname="ui/recommendation3/_uservoice should render segments" name="ui/recommendation3/_uservoice should render segments" time="0.004">
    </testcase>
    <testcase classname="ui/recommendation3/_uservoice UserVoiceSegment should call openWindow callback if set" name="ui/recommendation3/_uservoice UserVoiceSegment should call openWindow callback if set" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="ui/recommendation3/_modules" errors="0" failures="0" skipped="0" timestamp="2021-10-07T06:53:51" time="3.841" tests="3">
    <testcase classname="ui/recommendation3/_modules should render" name="ui/recommendation3/_modules should render" time="0.004">
    </testcase>
    <testcase classname="ui/recommendation3/_modules should render a callout when one is specified" name="ui/recommendation3/_modules should render a callout when one is specified" time="0.001">
    </testcase>
    <testcase classname="ui/recommendation3/_modules should not render when not visible" name="ui/recommendation3/_modules should not render when not visible" time="0.001">
    </testcase>
  </testsuite>
  <testsuite name="ui/checkbox" errors="0" failures="0" skipped="0" timestamp="2021-10-07T06:53:44" time="18.745" tests="11">
    <testcase classname="ui/checkbox should render" name="ui/checkbox should render" time="0.002">
    </testcase>
    <testcase classname="ui/checkbox should render a complete checkbox HTML control" name="ui/checkbox should render a complete checkbox HTML control" time="0.001">
    </testcase>
    <testcase classname="ui/checkbox should render additional class" name="ui/checkbox should render additional class" time="0">
    </testcase>
    <testcase classname="ui/checkbox should render an unchecked checkbox if initial checked state is not specified" name="ui/checkbox should render an unchecked checkbox if initial checked state is not specified" time="0.001">
    </testcase>
    <testcase classname="ui/checkbox should return default value of false (truthy) if defaultState false" name="ui/checkbox should return default value of false (truthy) if defaultState false" time="0">
    </testcase>
    <testcase classname="ui/checkbox should return default value of true if defaultState is true" name="ui/checkbox should return default value of true if defaultState is true" time="0.001">
    </testcase>
    <testcase classname="ui/checkbox onDisplayInformationText should render a description text control only when requested" name="ui/checkbox onDisplayInformationText should render a description text control only when requested" time="0.001">
    </testcase>
    <testcase classname="ui/checkbox onChange should call onChange handler when set" name="ui/checkbox onChange should call onChange handler when set" time="0.001">
    </testcase>
    <testcase classname="ui/checkbox onChange should not throw error if onChange handler is not set" name="ui/checkbox onChange should not throw error if onChange handler is not set" time="0">
    </testcase>
    <testcase classname="ui/checkbox onChange should render a checked checkbox when clicked" name="ui/checkbox onChange should render a checked checkbox when clicked" time="0.001">
    </testcase>
    <testcase classname="ui/checkbox onChange should render an unchecked box when clicked twice" name="ui/checkbox onChange should render an unchecked box when clicked twice" time="0">
    </testcase>
  </testsuite>
  <testsuite name="ui/tip" errors="0" failures="0" skipped="0" timestamp="2021-10-07T06:53:35" time="27.109" tests="6">
    <testcase classname="ui/tip should render" name="ui/tip should render" time="0.003">
    </testcase>
    <testcase classname="ui/tip gapSpace should set the gapSpace prop on the callout when gapSpace is set" name="ui/tip gapSpace should set the gapSpace prop on the callout when gapSpace is set" time="0.001">
    </testcase>
    <testcase classname="ui/tip gapSpace should set the gapSpace prop on the callout to the default value when gapSpace is not set" name="ui/tip gapSpace should set the gapSpace prop on the callout to the default value when gapSpace is not set" time="0.001">
    </testcase>
    <testcase classname="ui/tip items should render actions" name="ui/tip items should render actions" time="0.002">
    </testcase>
    <testcase classname="ui/tip message should render a message" name="ui/tip message should render a message" time="0.001">
    </testcase>
    <testcase classname="ui/tip onDismiss should set the onDismiss prop on the callout when onDismiss is set" name="ui/tip onDismiss should set the onDismiss prop on the callout when onDismiss is set" time="0.001">
    </testcase>
  </testsuite>
</testsuites>